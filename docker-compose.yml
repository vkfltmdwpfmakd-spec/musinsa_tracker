services:
  api:
    build: .
    container_name: musinsa_api
    ports:
      - "8000:8000"
    volumes:
      - ./app:/code/app
    depends_on:
      - db
      - prometheus
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://user:password@db:5432/musinsa_db}
  db:
    image: postgres:14
    container_name: musinsa_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER:-user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=${DB_NAME:-musinsa_db}

  prometheus:
      image: prom/prometheus:latest
      container_name: musinsa_prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus_data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
        - '--web.enable-lifecycle'

  grafana:
      image: grafana/grafana:latest
      container_name: musinsa_grafana
      ports:
        - "3000:3000"
      volumes:
        - grafana_data:/var/lib/grafana
        - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
        - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=admin
        - GF_USERS_ALLOW_SIGN_UP=false

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: